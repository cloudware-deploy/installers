#!/bin/bash
# Use colors, but only if connected to a terminal, and that terminal
# supports them.
if which tput >/dev/null 2>&1; then
    ncolors=$(tput colors)
fi
if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 4)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi

# Only enable exit-on-error after the non-critical colorization stuff,
# which may fail on systems lacking tput or terminfo
set -e

if [ ! -n "$MYBASH" ]; then
	MYBASH=$HOME/.bash_profile.d
fi

if [ -d "$MYBASH" ]; then
	printf "${YELLOW}You already have .bash_profile.d installed.${NORMAL}\n"

  read -s -n 1 -p "Overwrite? [Y/n] " OVERWRITE

  case ${OVERWRITE:-y} in
    y | Y )
      printf "Yes\n\n"
      printf "${BLUE}Removing $MYBASH...${NORMAL}\n"

      rm -rf $MYBASH

      printf "${BLUE}Removing .bash_profile patch${NORMAL}\n"

      sed -i.bak '/^# \.bash_profile\.d options/d' ~/.bash_profile
      sed -i.bak '/^export MYBASH=/d' ~/.bash_profile
      sed -i.bak '/^source \$MYBASH\/init\.sh/d' ~/.bash_profile
      sed -i.bak '/^export _DEVELOPMENT_BASE_PATH/d' ~/.bash_profile

      ;;
    *)
      printf "No\n\n"
      printf "You'll need to remove $MYBASH if you want to re-install.\n"
      printf "Or use the uninstaller:\n"
      printf "    bash -c \"\$(curl -sSL https://raw.githubusercontent.com/cloudware-deploy/installers/master/uninstall-bash-profile-d)\""
      exit

      ;;
  esac
fi

# Prevent the cloned repository from having insecure permissions.
umask g-w,o-w

printf "${BLUE}Cloning .bash_profile.d...${NORMAL}\n"
hash git >/dev/null 2>&1 || {
	echo "Error: git is not installed"
	exit 1
}
env git clone --depth=1 git@github.com:cloudware-deploy/bash-profile-d.git $MYBASH 2>/dev/null && rm -rf $MYBASH/.git || {
	printf "Error: git clone of .bash_profile.d repo failed\n"
	exit 1
}

read -p "Please, define your development path [$(pwd)]: " development_path
if [ ${#development_path} -eq 0 ]; then
  development_path="$(pwd)"
fi

printf "${BLUE}Setting up your development path ($development_path)${NORMAL}\n"

printf "${BLUE}Using the .bash_profile.d${NORMAL}\n"
cat >> $HOME/.bash_profile <<-EOF
	# .bash_profile.d options
	export MYBASH=$MYBASH
	source \$MYBASH/init.sh
	export _DEVELOPMENT_BASE_PATH=$development_path
	EOF

printf "${GREEN}bash_profile.d is successfully installed${NORMAL}\n"

exec bash -l
